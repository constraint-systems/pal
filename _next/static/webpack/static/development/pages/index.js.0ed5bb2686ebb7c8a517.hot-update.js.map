{"version":3,"file":"static/webpack/static/development/pages/index.js.0ed5bb2686ebb7c8a517.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport Head from 'next/head'\nimport { themes } from '../s/theme_min.js'\nimport { fragment_shader, vertex_shader } from '../shaders/shaders.js'\nimport * as chroma from 'chroma-js'\n\nlet fs = 15\nlet lh = 1.5\nlet rlh = fs * lh\n\nlet theme_names = themes.map(t => t.name)\n\nlet Keycap = ({ k, fg, bg, clickKey, inline = false }) => {\n  return (\n    <button\n      style={{\n        userSelect: 'none',\n        MozUserSelect: 'none',\n        background: fg,\n        color: bg,\n        paddingLeft: '0.5ch',\n        paddingRight: '0.5ch',\n        textDecoration: 'underline',\n        display: inline ? 'inline' : 'block',\n        font: 'inherir',\n        paddingBottom: 0,\n        paddingTop: 0,\n        border: 0,\n      }}\n      onClick={() => {\n        clickKey(k)\n      }}\n    >\n      {k}\n    </button>\n  )\n}\n\nconsole.log('keys used:', 'asdfhlow?x')\n\nconst Home = ({ pick_serve }) => {\n  let [pick, setPick] = useState(0)\n  let [hue_shift, setHueShift] = useState(0)\n  let keymap_ref = useRef({})\n  let c_holder_ref = useRef(null)\n  let program_ref = useRef({})\n  let container_ref = useRef({})\n  let [load, setLoad] = useState(false)\n  let [lthresh, setLthresh] = useState(0.2)\n  let [hthresh, setHthresh] = useState(0.8)\n  let [show_info, setShowInfo] = useState(true)\n\n  function clickKey(key) {\n    let km = keymap_ref.current\n    km[key] = true\n    keyAction({ key }, false)\n    setTimeout(() => {\n      km[key] = false\n    }, 0)\n  }\n\n  function initImage(src, first_load = false) {\n    let img = new Image()\n    img.onload = () => {\n      setLoad(true)\n\n      let w = window.innerWidth - 18 * 2\n      let h = window.innerHeight - rlh\n\n      let iw = img.width\n      let ih = img.height\n\n      let wa = w / h\n      let ia = iw / ih\n\n      let resize_check = false\n      let rw, rh\n      if (ia >= wa) {\n        if (iw > w) {\n          resize_check = true\n          rw = w\n          rh = Math.round(w / ia)\n        }\n      } else {\n        if (ih > h) {\n          resize_check = true\n          rh = h\n          rw = Math.round(h * ia)\n        }\n      }\n\n      if (resize_check) {\n        let confirm_check = true\n        if (!first_load) {\n          confirm_check = confirm(\n            `The image you selected is larger (${iw}x${ih}) than the browser window.  Resize it to fit (${rw}x${rh})? Choose cancel to import it at full size.`\n          )\n        }\n        if (confirm_check) {\n          img.width = rw\n          img.height = rh\n        }\n      }\n\n      let c_holder = c_holder_ref.current\n      c_holder.innerHTML = ''\n\n      container_ref.current.style.minWidth = img.width + 18 + 'px'\n\n      let c = document.createElement('canvas')\n      c.width = img.width\n      c.height = img.height\n      c_holder.appendChild(c)\n\n      let ctx = c.getContext('webgl', { preserveDrawingBuffer: true })\n\n      function compileShader(shaderSource, shaderType) {\n        let shader = ctx.createShader(shaderType)\n        ctx.shaderSource(shader, shaderSource)\n        ctx.compileShader(shader)\n        return shader\n      }\n\n      let program = ctx.createProgram()\n      program_ref.current = program\n      ctx.attachShader(program, compileShader(vertex_shader, ctx.VERTEX_SHADER))\n      ctx.attachShader(\n        program,\n        compileShader(fragment_shader, ctx.FRAGMENT_SHADER)\n      )\n      ctx.linkProgram(program)\n      ctx.useProgram(program)\n\n      let thresh_location = ctx.getUniformLocation(program, 'u_thresh')\n      ctx.uniform2f(thresh_location, lthresh, hthresh)\n\n      let palette_location = ctx.getUniformLocation(program, 'u_palette')\n      let picked = themes[pick]\n      let hues = picked.hues.map(k =>\n        chroma(k)\n          .gl()\n          .slice(0, 3)\n      )\n      let arranged = [\n        chroma(picked.bg)\n          .gl()\n          .slice(0, 3),\n        chroma(picked.fg)\n          .gl()\n          .slice(0, 3),\n        ...hues,\n      ]\n\n      ctx.uniform3fv(palette_location, new Float32Array(arranged.flat()))\n\n      let resolution_location = ctx.getUniformLocation(program, 'u_resolution')\n      ctx.uniform2f(resolution_location, c.width, c.height)\n\n      let position_location = ctx.getAttribLocation(program, 'a_position')\n      let buffer = ctx.createBuffer()\n      ctx.bindBuffer(ctx.ARRAY_BUFFER, buffer)\n      ctx.bufferData(\n        ctx.ARRAY_BUFFER,\n        new Float32Array([\n          0,\n          0,\n          img.width,\n          0,\n          0,\n          img.height,\n          0,\n          img.height,\n          img.width,\n          0,\n          img.width,\n          img.height,\n        ]),\n        ctx.STATIC_DRAW\n      )\n      ctx.enableVertexAttribArray(position_location)\n      ctx.vertexAttribPointer(position_location, 2, ctx.FLOAT, false, 0, 0)\n\n      let tex_coord_location = ctx.getAttribLocation(program, 'a_texCoord')\n      let tex_coord_buffer = ctx.createBuffer()\n      ctx.bindBuffer(ctx.ARRAY_BUFFER, tex_coord_buffer)\n      ctx.bufferData(\n        ctx.ARRAY_BUFFER,\n        new Float32Array([\n          0.0,\n          0.0,\n          1.0,\n          0.0,\n          0.0,\n          1.0,\n          0.0,\n          1.0,\n          1.0,\n          0.0,\n          1.0,\n          1.0,\n        ]),\n        ctx.STATIC_DRAW\n      )\n      ctx.enableVertexAttribArray(tex_coord_location)\n      ctx.vertexAttribPointer(tex_coord_location, 2, ctx.FLOAT, false, 0, 0)\n\n      let texture = ctx.createTexture()\n      ctx.bindTexture(ctx.TEXTURE_2D, texture)\n      ctx.bindTexture(ctx.TEXTURE_2D, texture)\n\n      ctx.texParameteri(ctx.TEXTURE_2D, ctx.TEXTURE_WRAP_S, ctx.CLAMP_TO_EDGE)\n      ctx.texParameteri(ctx.TEXTURE_2D, ctx.TEXTURE_WRAP_T, ctx.CLAMP_TO_EDGE)\n      ctx.texParameteri(ctx.TEXTURE_2D, ctx.TEXTURE_MIN_FILTER, ctx.NEAREST)\n      ctx.texParameteri(ctx.TEXTURE_2D, ctx.TEXTURE_MAG_FILTER, ctx.NEAREST)\n      ctx.texImage2D(\n        ctx.TEXTURE_2D,\n        0,\n        ctx.RGBA,\n        ctx.RGBA,\n        ctx.UNSIGNED_BYTE,\n        img\n      )\n\n      ctx.drawArrays(ctx.TRIANGLES, 0, 6)\n    }\n    img.src = src\n  }\n\n  useEffect(() => {\n    initImage('scruggs.jpg', true)\n  }, [])\n\n  function selectTheme(name) {\n    let index = theme_names.indexOf(name)\n    setPick(index)\n  }\n\n  function keyAction(e) {\n    let key = e.key.toLowerCase()\n    let repeat = e.repeat\n    let keymap = keymap_ref.current\n    if (key === 'o' && !repeat) {\n      let input = document.createElement('input')\n      input.setAttribute('type', 'file')\n      input.dispatchEvent(\n        new MouseEvent(`click`, {\n          bubbles: true,\n          cancelable: true,\n          view: window,\n        })\n      )\n\n      function handleChange(e) {\n        for (const item of this.files) {\n          if (item.type.indexOf('image') < 0) {\n            continue\n          }\n          let src = URL.createObjectURL(item)\n          initImage(src)\n        }\n        this.removeEventListener('change', handleChange)\n      }\n      input.addEventListener('change', handleChange)\n    }\n    if (key === 'w' && !repeat) {\n      let link = document.createElement('a')\n\n      var revokeURL = function() {\n        let me = this\n        requestAnimationFrame(function() {\n          URL.revokeObjectURL(me.href)\n          me.href = null\n        })\n        this.removeEventListener('click', revokeURL)\n      }\n\n      c_holder_ref.current.childNodes[0].toBlob(function(blob) {\n        link.setAttribute(\n          'download',\n          `pal-${themes[pick].name\n            .replace(' ', '_')\n            .toLowerCase()}-l${lthresh\n            .toString()\n            .replace('0.', '')}-h${hthresh\n            .toString()\n            .replace('0.', '')}-s${hue_shift}-${new Date()\n            .toISOString()\n            .slice(0, -4)\n            .replace(/-/g, '')\n            .replace(/:/g, '')\n            .replace(/_/g, '')\n            .replace(/\\./g, '')}Z.png`\n        )\n        link.setAttribute('href', URL.createObjectURL(blob))\n        link.addEventListener('click', revokeURL)\n        link.dispatchEvent(\n          new MouseEvent(`click`, {\n            bubbles: true,\n            cancelable: true,\n            view: window,\n          })\n        )\n      })\n    }\n    if (key === 'x') {\n      setShowInfo(false)\n    }\n    if (key === '?') {\n      setShowInfo(prev => !prev)\n    }\n\n    if (keymap['j']) {\n      setPick(prevState => {\n        let nstate = prevState + 1\n        if (nstate === themes.length) nstate = 0\n        return nstate\n      })\n    }\n    if (keymap['k']) {\n      setPick(prevState => {\n        let nstate = prevState - 1\n        if (nstate < 0) nstate = themes.length - 1\n        return nstate\n      })\n    }\n    if (keymap['h']) {\n      setHueShift(prevState => {\n        let n = prevState - 1\n        if (n < 0) n = themes[0].hues.length - 1\n        return n\n      })\n    }\n    if (keymap['l']) {\n      setHueShift(prevState => {\n        return (prevState + 1) % themes[0].hues.length\n      })\n    }\n    if (keymap['a']) {\n      setLthresh(prevState => {\n        return Math.max(0, prevState - 0.0125)\n      })\n    }\n    if (keymap['s']) {\n      setLthresh(prevState => {\n        return Math.min(hthresh, prevState + 0.0125)\n      })\n    }\n    if (keymap['d']) {\n      setHthresh(prevState => {\n        return Math.max(lthresh, prevState - 0.0125)\n      })\n    }\n    if (keymap['f']) {\n      setHthresh(prevState => {\n        return Math.min(1, prevState + 0.0125)\n      })\n    }\n  }\n\n  useEffect(() => {\n    if (load) {\n      let c = c_holder_ref.current.childNodes[0]\n      let ctx = c.getContext('webgl', { preserveDrawingBuffer: true })\n      let program = program_ref.current\n\n      let thresh_location = ctx.getUniformLocation(program, 'u_thresh')\n      ctx.uniform2f(thresh_location, lthresh, hthresh)\n\n      let picked = themes[pick]\n      let hues = picked.hues.map(k =>\n        chroma(k)\n          .gl()\n          .slice(0, 3)\n      )\n\n      let hues_a = hues.slice(0, hue_shift)\n      let hues_b = hues.slice(hue_shift)\n      let arranged = [\n        chroma(picked.bg)\n          .gl()\n          .slice(0, 3),\n        chroma(picked.fg)\n          .gl()\n          .slice(0, 3),\n        ...hues_b,\n        ...hues_a,\n      ]\n\n      let palette_location = ctx.getUniformLocation(program, 'u_palette')\n      ctx.uniform3fv(palette_location, new Float32Array(arranged.flat()))\n\n      ctx.drawArrays(ctx.TRIANGLES, 0, 6)\n    }\n  }, [lthresh, hthresh, pick, hue_shift])\n\n  function downHandler(e) {\n    let key = e.key.toLowerCase()\n    keymap_ref.current[key] = true\n    keyAction(e)\n  }\n\n  function upHandler(e) {\n    let key = e.key.toLowerCase()\n    keymap_ref.current[key] = false\n  }\n\n  function onPaste(e) {\n    e.preventDefault()\n    e.stopPropagation()\n    for (const item of e.clipboardData.items) {\n      if (item.type.indexOf('image') < 0) {\n        continue\n      }\n      let file = item.getAsFile()\n      let src = URL.createObjectURL(file)\n      initImage(src)\n    }\n  }\n\n  function onDrag(e) {\n    e.stopPropagation()\n    e.preventDefault()\n    e.dataTransfer.dropEffect = 'copy'\n  }\n\n  function onDrop(e) {\n    e.preventDefault()\n    e.stopPropagation()\n    let file = e.dataTransfer.files[0]\n    let filename = file.path ? file.path : file.name ? file.name : ''\n    let src = URL.createObjectURL(file)\n    initImage(src)\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler)\n    window.addEventListener('keyup', upHandler)\n    window.addEventListener('paste', onPaste, false)\n    window.addEventListener('dragover', onDrag, false)\n    window.addEventListener('drop', onDrop, false)\n    return () => {\n      window.removeEventListener('keydown', downHandler)\n      window.removeEventListener('keyup', upHandler)\n      window.removeEventListener('paste', onPaste)\n      window.removeEventListener('dragover', onDrag, false)\n      window.removeEventListener('drop', onDrop, false)\n    }\n  }, [lthresh, hthresh, pick])\n\n  let picked = themes[pick]\n  let fg = picked.fg\n  let bg = picked.bg\n  let sorted = [...themes.slice(pick), ...themes.slice(0, pick)]\n  return (\n    <div>\n      <Head>\n        <title>Pal</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <div\n        ref={container_ref}\n        style={{\n          minHeight: '100%',\n          background: bg,\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            outline: `solid 1px ${fg}`,\n            color: fg,\n          }}\n        >\n          <div style={{ display: 'flex' }}>\n            <div style={{ marginLeft: '1ch', marginRight: '1ch' }}>\n              <div>Pal</div>\n            </div>\n            <div style={{ display: 'flex', marginRight: '1ch' }}>\n              <Keycap k={'o'} fg={fg} bg={bg} clickKey={clickKey} />\n              <div style={{ marginLeft: '0.5ch' }}>open file</div>\n            </div>\n            <div style={{ display: 'flex', marginRight: '1ch' }}>\n              <Keycap k={'w'} fg={fg} bg={bg} clickKey={clickKey} />\n              <div style={{ marginLeft: '0.5ch' }}>save png</div>\n            </div>\n            <div style={{ display: 'flex' }}>\n              <Keycap k={'?'} fg={fg} bg={bg} clickKey={clickKey} />\n              <div style={{ marginLeft: '0.5ch' }}>show info</div>\n            </div>\n          </div>\n        </div>\n\n        <div\n          style={{\n            paddingLeft: '1ch',\n            paddingRight: '1ch',\n            paddingTop: rlh / 2,\n            paddingBottom: 0,\n            display: 'flex',\n            marginBottom: rlh / 4,\n          }}\n        >\n          <div\n            style={{\n              border: `solid 1px ${fg}`,\n              background: fg,\n            }}\n            ref={c_holder_ref}\n          ></div>\n        </div>\n\n        <div\n          style={{\n            display: 'flex',\n            color: fg,\n            paddingLeft: '1ch',\n            marginBottom: rlh / 4,\n          }}\n        >\n          <div style={{ marginRight: '2ch' }}>\n            <div style={{}}>lothresh</div>\n            <div style={{ display: 'flex', outline: `solid 1px ${fg}` }}>\n              <Keycap k={'a'} fg={fg} bg={bg} clickKey={clickKey} />\n              <div\n                style={{\n                  paddingLeft: '0.5ch',\n                  paddingRight: '0.5ch',\n                }}\n              >\n                {lthresh.toFixed(4)}\n              </div>\n              <Keycap k={'s'} fg={fg} bg={bg} clickKey={clickKey} />\n            </div>\n          </div>\n          <div style={{ marginRight: '2ch' }}>\n            <div>hithresh</div>\n            <div style={{ display: 'flex', outline: `solid 1px ${fg}` }}>\n              <Keycap k={'d'} fg={fg} bg={bg} clickKey={clickKey} />\n              <div\n                style={{\n                  paddingLeft: '0.5ch',\n                  paddingRight: '0.5ch',\n                }}\n              >\n                {hthresh.toFixed(4)}\n              </div>\n              <Keycap k={'f'} fg={fg} bg={bg} clickKey={clickKey} />\n            </div>\n          </div>\n          <div>\n            <div>shue</div>\n            <div style={{ display: 'flex', outline: `solid 1px ${fg}` }}>\n              <Keycap k={'h'} fg={fg} bg={bg} clickKey={clickKey} />\n              <div\n                style={{\n                  paddingLeft: '0.5ch',\n                  paddingRight: '0.5ch',\n                }}\n              >\n                {hue_shift}\n              </div>\n              <Keycap k={'l'} fg={fg} bg={bg} clickKey={clickKey} />\n            </div>\n          </div>\n        </div>\n\n        <div\n          style={{\n            display: 'block',\n            paddingLeft: '1ch',\n            paddingRight: '1ch',\n            paddingBottom: rlh / 2,\n          }}\n        >\n          <div style={{ color: fg }}>theme</div>\n          {sorted.map((t, i) => (\n            <div\n              key={t.name}\n              style={{\n                display: 'flex',\n                position: 'relative',\n                color: fg,\n                outline: i === 0 ? `solid 1px ${fg}` : 'none',\n                zIndex: i === 0 ? 2 : 1,\n                cursor: 'default',\n              }}\n            >\n              <div\n                style={{ width: '12ch', display: 'flex' }}\n                onClick={() => {\n                  selectTheme(t.name)\n                }}\n              >\n                <div\n                  style={{ background: t.bg, width: '2ch', height: '1.5rem' }}\n                ></div>\n                <div\n                  style={{ background: t.fg, width: '2ch', height: '1.5rem' }}\n                ></div>\n                {t.hues.map(k => (\n                  <div\n                    key={k}\n                    style={{ background: k, width: '2ch', height: '1.5rem' }}\n                  ></div>\n                ))}\n              </div>\n              <div style={{ display: 'flex', flexGrow: 1 }}>\n                <div\n                  style={{\n                    background: i === 0 && false ? t.fg : t.bg,\n                    color: i === 0 && false ? t.bg : t.fg,\n                    paddingLeft: '0.5ch',\n                    paddingRight: '0.5ch',\n                  }}\n                  onClick={() => {\n                    selectTheme(t.name)\n                  }}\n                >\n                  {t.name}\n                </div>\n              </div>\n              {i === 0 ? (\n                <div style={{ display: 'flex' }}>\n                  <Keycap k={'j'} fg={fg} bg={bg} clickKey={clickKey} />\n                  <Keycap k={'k'} fg={fg} bg={bg} clickKey={clickKey} />\n                </div>\n              ) : null}\n            </div>\n          ))}\n        </div>\n\n        {show_info ? (\n          <div\n            style={{\n              position: 'fixed',\n              zIndex: 4,\n              left: 0,\n              top: 0,\n              height: '100%',\n              width: '100%',\n              paddingLeft: '1ch',\n              paddingRight: '1ch',\n              paddingTop: rlh * 2,\n            }}\n            onClick={() => {\n              setShowInfo(false)\n            }}\n          >\n            <div\n              style={{\n                background: bg,\n                color: fg,\n                border: `solid 1px ${fg}`,\n                borderTop: 'none',\n                maxWidth: '60ch',\n                margin: '0 auto',\n              }}\n              onClick={e => {\n                e.stopPropagation()\n              }}\n            >\n              <div\n                style={{\n                  outline: `solid 1px ${fg}`,\n                  paddingLeft: '1ch',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                }}\n              >\n                <div>Info</div>\n                <Keycap k={'x'} fg={fg} bg={bg} clickKey={clickKey} />\n              </div>\n              <div\n                style={{\n                  paddingLeft: '1ch',\n                  paddingRight: '1ch',\n                  paddingTop: rlh / 2,\n                  paddingBottom: rlh / 2,\n                }}\n              >\n                <div style={{ marginBottom: rlh }}>\n                  Pal let's you apply an eight-color terminal color palette to\n                  an image. Use the keyboard controls to choose a theme, set\n                  thresholds, and cycle hues.\n                </div>\n                <div style={{ marginBottom: rlh }}>\n                  You can load your own image by pressing{' '}\n                  <Keycap\n                    k={'o'}\n                    fg={fg}\n                    bg={bg}\n                    clickKey={clickKey}\n                    inline={true}\n                  />\n                  , pasting, or dragging and dropping.\n                </div>\n\n                <div>\n                  You can read more about how it works and view the code{' '}\n                  <a\n                    href=\"https://github.com/constraint-systems/pal\"\n                    style={{ color: fg }}\n                  >\n                    on github\n                  </a>\n                  .\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : null}\n      </div>\n\n      <style global jsx>{`\n        @font-face {\n          font-family: 'custom';\n          src: url('/IBMPlexSans-Regular.woff2') format('woff2'),\n            url('/IBMPlexSans-Regular.woff') format('woff');\n        }\n        @font-face {\n          font-family: 'customono';\n          src: url('/IBMPlexMono-Regular.woff2') format('woff2'),\n            url('/IBMPlexMono-Regular.woff') format('woff');\n        }\n        * {\n          box-sizing: border-box;\n        }\n        html {\n          font-family: 'customono', sans-serif;\n          font-size: ${fs}px;\n          line-height: ${lh};\n        }\n        body {\n          margin: 0;\n          padding: 0;\n          overflow: hidden;\n        }\n        canvas {\n          display: block;\n        }\n      `}</style>\n    </div>\n  )\n}\n\nexport default Home\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAKA;AAUA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAkBA;AACA;AAEA;AACA;AACA;AACA;AAkBA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAWA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AApBA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAiBA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAgBA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAWA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA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","sourceRoot":""}